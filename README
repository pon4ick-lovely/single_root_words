▎Описание

Проект содержит функцию single_root_words, которая позволяет находить слова, содержащие одно корневое слово или наоборот. Функция принимает одно обязательное слово и неограниченное количество других слов, возвращая список слов, соответствующих заданным условиям.

▎Установка

Для работы с проектом вам не нужно устанавливать дополнительные библиотеки. Просто скопируйте код в свой Python-скрипт или Jupyter Notebook.

▎Использование

▎Функция single_root_words

def single_root_words(root_word, *other_words):
    # Ваш код здесь


▎Параметры

- root_word (str): Обязательное корневое слово.
- *other_words (str): Неограниченное количество слов для проверки.

▎Возвращаемое значение

- Список слов, которые содержат корневое слово или наоборот.

▎Пример использования

result1 = single_root_words('rich', 'richiest', 'orichalcum', 'cheers', 'richies')
result2 = single_root_words('Disablement', 'Able', 'Mable', 'Disable', 'Bagel')

print(result1)  # Вывод: ['richiest', 'orichalcum', 'richies']
print(result2)  # Вывод: ['Able', 'Disable']


▎Примечания

- Проверка наличия одного слова в составе другого не учитывает регистр символов. Например, слова 'Disablement' и 'Able' считаются подходящими.
- Для реализации функции могут понадобиться следующие методы строк:
  - Оператор in
  - Методы lower() или upper()

▎Лицензия

Этот проект лицензирован под [MIT License](LICENSE).

▎Контрибьюция

Если вы хотите внести изменения или улучшения в проект, пожалуйста, создайте форк репозитория и отправьте пулл-реквест с вашими изменениями.

▎Связь

Если у вас есть вопросы или предложения, пожалуйста, свяжитесь с автором проекта через GitHub.